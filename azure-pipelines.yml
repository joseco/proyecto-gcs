# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest


steps:
- script: |
    echo ---------------> Update
    echo "deb https://dl.bintray.com/sbt/debian /" | sudo tee -a /etc/apt/sources.list.d/sbt.list
    curl -sL "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x2EE0EA64E40A89B84B2DF73499E82A75642AC823" | sudo apt-key add
    sudo add-apt-repository ppa:openjdk-r/ppa
    sudo apt-get -y update
    sudo apt-get -y install openjdk-8-jdk
    sudo apt-get -y install sbt
    sudo apt-get -y install rpm
    curl -k -O -L "https://packages.chef.io/files/stable/chef-workstation/21.2.278/ubuntu/20.04/chef-workstation_21.2.278-1_amd64.deb"
    sudo apt install ./chef-workstation_21.2.278-1_amd64.deb
    mkdir '.chef'
    cd .chef    
    (umask  077 ; echo $(ChefSSHKey) | base64 --decode > sshkey.pem)
    echo $(ConfigRB) > config.rb
    cd ..
    (umask  077 ; echo $(WebServerSSHKey) | base64 --decode > id_azure)
  displayName: 'Provisioning enviroment'

- script: |
    sbt compile
    sbt test
  displayName: 'Commit Check'

- script: |
    echo Correr las pruebas de integraci√≥n
  displayName: 'Integration Tests'

- script: |
    sbt rpm:packageBin
  displayName: 'Generating RPM artifact '

- script: |

  displayName: 'Deploying'
